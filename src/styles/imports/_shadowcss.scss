//
// Apply styles to a selected set of distributed nodes (Light DOM).
// Mixin also generates the polyfill selector with same selector, by default, or
// to customized selector (ex. more restrictive) if needed.
//
// For more information about styling distributed nodes and the polyfill
// selector: http://www.polymer-project.org/articles/styling-elements.html#style-distributed
//
//
// Example: `::content li`
// -----------------------
//
//     // SCSS
//     @include apply-to-content('li') {
//       background: red;
//     }
//
//     // Generated CSS
//     polyfill-next-selector { content: 'li'; }
//     ::content li {
//       background: red;
//     }
//
//
// Example: `::content li` for native, `:host > li` for polyfill
// -------------------------------------------------------------
//
//     // SCSS
//     @include apply-to-content('li', ':host > li') {
//       background: red;
//     }
//
//     // Generated CSS
//     polyfill-next-selector { content: ':host > li'; }
//     ::content li {
//       background: red;
//     }
//
@mixin apply-to-content($selector, $polyfillSelector:$selector){
  polyfill-next-selector { content: '#{$polyfillSelector}'; }
  ::content #{$selector}  {
    @content;
  }
}
